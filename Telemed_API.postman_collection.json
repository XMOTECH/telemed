{
  "info": {
    "name": "Telemed API - Backend Phoenix",
    "description": "Collection complète pour tester l'API de télémédecine Telemed",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "_postman_id": "telemed-api-2025"
  },
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{access_token}}",
        "type": "string"
      }
    ]
  },
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:4001/api/v1",
      "type": "string"
    },
    {
      "key": "access_token",
      "value": "",
      "type": "string"
    },
    {
      "key": "refresh_token",
      "value": "",
      "type": "string"
    },
    {
      "key": "user_id",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "Health Check",
      "item": [
        {
          "name": "Health Check",
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "http://localhost:4001/api/health",
              "protocol": "http",
              "host": ["localhost"],
              "port": "4000",
              "path": ["api", "health"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Authentication",
      "item": [
        {
          "name": "Register Patient",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const jsonData = pm.response.json();",
                  "    pm.environment.set('access_token', jsonData.data.tokens.access_token);",
                  "    pm.environment.set('refresh_token', jsonData.data.tokens.refresh_token);",
                  "    pm.environment.set('user_id', jsonData.data.user.id);",
                  "    pm.test('Registration successful', function() {",
                  "        pm.response.to.have.status(201);",
                  "    });",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"user\": {\n    \"email\": \"patient@test.com\",\n    \"password\": \"password12345\",\n    \"role\": \"patient\"\n  }\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/register",
              "host": ["{{base_url}}"],
              "path": ["auth", "register"]
            }
          },
          "response": []
        },
        {
          "name": "Register Doctor",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const jsonData = pm.response.json();",
                  "    pm.environment.set('doctor_token', jsonData.data.tokens.access_token);",
                  "    pm.environment.set('doctor_id', jsonData.data.user.id);",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"user\": {\n    \"email\": \"doctor@test.com\",\n    \"password\": \"password12345\",\n    \"role\": \"doctor\"\n  }\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/register",
              "host": ["{{base_url}}"],
              "path": ["auth", "register"]
            }
          },
          "response": []
        },
        {
          "name": "Login",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "const jsonData = pm.response.json();",
                  "pm.environment.set('access_token', jsonData.data.tokens.access_token);",
                  "pm.environment.set('refresh_token', jsonData.data.tokens.refresh_token);",
                  "pm.environment.set('user_id', jsonData.data.user.id);",
                  "",
                  "pm.test('Login successful', function() {",
                  "    pm.response.to.have.status(200);",
                  "    pm.expect(jsonData.data.tokens.access_token).to.exist;",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"patient@test.com\",\n  \"password\": \"password12345\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/login",
              "host": ["{{base_url}}"],
              "path": ["auth", "login"]
            }
          },
          "response": []
        },
        {
          "name": "Refresh Token",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "const jsonData = pm.response.json();",
                  "pm.environment.set('access_token', jsonData.data.access_token);",
                  "",
                  "pm.test('Token refreshed', function() {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"refresh_token\": \"{{refresh_token}}\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/refresh",
              "host": ["{{base_url}}"],
              "path": ["auth", "refresh"]
            }
          },
          "response": []
        },
        {
          "name": "Forgot Password",
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"patient@test.com\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/forgot_password",
              "host": ["{{base_url}}"],
              "path": ["auth", "forgot_password"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "User Profile",
      "item": [
        {
          "name": "Get Current User",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/me",
              "host": ["{{base_url}}"],
              "path": ["me"]
            }
          },
          "response": []
        },
        {
          "name": "Update Current User",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"user\": {\n    \"email\": \"patient.updated@test.com\"\n  }\n}"
            },
            "url": {
              "raw": "{{base_url}}/me",
              "host": ["{{base_url}}"],
              "path": ["me"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Medical Records",
      "item": [
        {
          "name": "List Medical Records",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/medical_records",
              "host": ["{{base_url}}"],
              "path": ["medical_records"]
            }
          },
          "response": []
        },
        {
          "name": "Create Medical Record",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const jsonData = pm.response.json();",
                  "    pm.environment.set('medical_record_id', jsonData.data.id);",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"medical_record\": {\n    \"user_id\": 1,\n    \"nom\": \"Jean Dupont\",\n    \"age\": 45,\n    \"category\": \"consultation\",\n    \"priority\": \"normal\",\n    \"soap_subjective\": \"Patient se plaint de maux de tête récurrents\",\n    \"soap_objective\": \"Tension artérielle: 130/85, Température: 37.2°C\",\n    \"soap_assessment\": \"Céphalées de tension probables\",\n    \"soap_plan\": \"Repos, hydratation, suivi dans 1 semaine\",\n    \"tags\": [\"céphalée\", \"tension\"]\n  }\n}"
            },
            "url": {
              "raw": "{{base_url}}/medical_records",
              "host": ["{{base_url}}"],
              "path": ["medical_records"]
            }
          },
          "response": []
        },
        {
          "name": "Get Medical Record",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/medical_records/{{medical_record_id}}",
              "host": ["{{base_url}}"],
              "path": ["medical_records", "{{medical_record_id}}"]
            }
          },
          "response": []
        },
        {
          "name": "Update Medical Record",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"medical_record\": {\n    \"soap_plan\": \"Plan modifié: Prescription d'ibuprofène 400mg\",\n    \"priority\": \"high\"\n  }\n}"
            },
            "url": {
              "raw": "{{base_url}}/medical_records/{{medical_record_id}}",
              "host": ["{{base_url}}"],
              "path": ["medical_records", "{{medical_record_id}}"]
            }
          },
          "response": []
        },
        {
          "name": "Delete Medical Record",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{base_url}}/medical_records/{{medical_record_id}}",
              "host": ["{{base_url}}"],
              "path": ["medical_records", "{{medical_record_id}}"]
            }
          },
          "response": []
        },
        {
          "name": "List Patient Medical Records",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/patients/1/medical_records",
              "host": ["{{base_url}}"],
              "path": ["patients", "1", "medical_records"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Appointments",
      "item": [
        {
          "name": "List Appointments",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/appointments",
              "host": ["{{base_url}}"],
              "path": ["appointments"]
            }
          },
          "response": []
        },
        {
          "name": "Create Appointment",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const jsonData = pm.response.json();",
                  "    pm.environment.set('appointment_id', jsonData.data.id);",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"appointment\": {\n    \"patient_id\": 1,\n    \"doctor_id\": 2,\n    \"scheduled_at\": \"2025-10-25T14:00:00Z\",\n    \"notes\": \"Consultation de suivi\",\n    \"status\": \"pending\"\n  }\n}"
            },
            "url": {
              "raw": "{{base_url}}/appointments",
              "host": ["{{base_url}}"],
              "path": ["appointments"]
            }
          },
          "response": []
        },
        {
          "name": "Get Appointment",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/appointments/{{appointment_id}}",
              "host": ["{{base_url}}"],
              "path": ["appointments", "{{appointment_id}}"]
            }
          },
          "response": []
        },
        {
          "name": "Update Appointment",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"appointment\": {\n    \"notes\": \"Notes mises à jour\",\n    \"scheduled_at\": \"2025-10-26T15:00:00Z\"\n  }\n}"
            },
            "url": {
              "raw": "{{base_url}}/appointments/{{appointment_id}}",
              "host": ["{{base_url}}"],
              "path": ["appointments", "{{appointment_id}}"]
            }
          },
          "response": []
        },
        {
          "name": "Confirm Appointment",
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{base_url}}/appointments/{{appointment_id}}/confirm",
              "host": ["{{base_url}}"],
              "path": ["appointments", "{{appointment_id}}", "confirm"]
            }
          },
          "response": []
        },
        {
          "name": "Cancel Appointment",
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{base_url}}/appointments/{{appointment_id}}/cancel",
              "host": ["{{base_url}}"],
              "path": ["appointments", "{{appointment_id}}", "cancel"]
            }
          },
          "response": []
        },
        {
          "name": "Delete Appointment",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{base_url}}/appointments/{{appointment_id}}",
              "host": ["{{base_url}}"],
              "path": ["appointments", "{{appointment_id}}"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Notifications",
      "item": [
        {
          "name": "List Notifications",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/notifications",
              "host": ["{{base_url}}"],
              "path": ["notifications"]
            }
          },
          "response": []
        },
        {
          "name": "Mark Notification as Read",
          "request": {
            "method": "PUT",
            "header": [],
            "url": {
              "raw": "{{base_url}}/notifications/1/read",
              "host": ["{{base_url}}"],
              "path": ["notifications", "1", "read"]
            }
          },
          "response": []
        }
      ]
    }
  ]
}

